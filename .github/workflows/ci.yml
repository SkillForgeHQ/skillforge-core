# .github/workflows/ci.yml

name: SkillForge CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: skillforge_test # Use the test DB name
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      neo4j:
        image: neo4j:5-community
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7687:7687
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Ensure you are installing from the correct file name
          pip install -r requirements.txt

      - name: Wait for services to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          while ! nc -z localhost 5432; do
            sleep 0.1 # wait for 1/10 of a second before check again
          done
          echo "PostgreSQL is up!"

          echo "Waiting for Neo4j..."
          while ! nc -z localhost 7687; do
            sleep 0.1
          done
          echo "Neo4j is up!"

      - name: Initialize Databases
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/skillforge_test
          NEO4J_URI: neo4j://localhost:7687
          NEO4J_USERNAME: neo4j
          NEO4J_PASSWORD: testpassword
          # SECRET_KEY and ACCESS_TOKEN_EXPIRE_MINUTES are not strictly needed for init_db.py
          # but including them for completeness or if init_db.py logic changes.
          # OPENAI_API_KEY is also not typically needed for DB init.
          SECRET_KEY: "testsecretkey"
          ACCESS_TOKEN_EXPIRE_MINUTES: "30"
          OPENAI_API_KEY: "sk-testplaceholderkey"
        run: python init_db.py

      - name: Run Tests
        # No need for the env block here, as conftest.py handles it
        # (conftest.py's pytest_configure will set these for the test execution context)
        run: python -m pytest
