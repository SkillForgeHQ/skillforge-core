name: SkillForge CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test: # Renamed job to 'test' for clarity
    runs-on: ubuntu-latest

    # This 'services' block starts database containers before the job runs
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432 # Map port to the runner
        # Healthcheck to wait until postgres is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      neo4j:
        image: neo4j:5-community
        env:
          NEO4J_AUTH: neo4j/testpassword
        ports:
          - 7687:7687 # Map Bolt port to the runner
        # Healthcheck for Neo4j (less direct, just waits for port)
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # dev-requirements.txt might have testing tools
        if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

    - name: Run Database Initialization
      # Use the test credentials defined in the services block above
      env:
        DATABASE_URL: "postgresql+psycopg://testuser:testpassword@localhost:5432/testdb"
      run: python init_db.py

    - name: Run tests
      # Provide all necessary env vars for the tests
      env:
        DATABASE_URL: "postgresql+psycopg://testuser:testpassword@localhost:5432/testdb"
        NEO4J_URI: "neo4j://localhost:7687"
        NEO4J_USERNAME: "neo4j"
        NEO4J_PASSWORD: "testpassword"
        SECRET_KEY: "a-secret-key-for-testing"
        ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      run: pytest